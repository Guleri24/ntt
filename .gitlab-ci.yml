.go-cache:
  variables:
    GOPATH: $CI_PROJECT_DIR/.go
  before_script:
    - mkdir -p .go
  cache:
    paths:
      - .go/pkg/mod/

stages:
  - build
  - test
  - deploy

golang:1.16:
  stage: test
  image: golang:1.16
  script:
    - go test ./...

golang:latest:
  stage: test
  image: golang:latest
  extends: .go-cache
  script:
    - go install gotest.tools/gotestsum@latest
    - $GOPATH/bin/gotestsum --junitfile report-junit.xml --format testname -- -race ./...
  artifacts:
    reports:
      junit: report-junit.xml

coverage:
  stage: test
  image: golang:latest
  extends: .go-cache
  needs: []
  script:
    - go install github.com/boumenot/gocover-cobertura@latest
    - go test -coverprofile=coverage.out -covermode count ./...
    - $GOPATH/bin/gocover-cobertura <coverage.out >report-coverage.xml
  coverage: '/coverage: \d+.\d+% of statements/'
  artifacts:
    reports:
      cobertura: report-coverage.xml

lint:
  stage: test
  image: registry.gitlab.com/gitlab-org/gitlab-build-images:golangci-lint-alpine
  needs: []
  script:
    - golangci-lint run
  artifacts:
    reports:
      codequality: report-lint.json
    paths:
      - report-lint.json

trigger-k3:
  stage: test
  variables:
    NTT_COMMIT_SHA: ${CI_COMMIT_SHA}
  needs: []
  trigger:
    project: k3/k3
    strategy: depend

update-k3:
  stage: deploy
  only:
    refs:
      - master
  script: |
    if [ -n "${CI-}" ]; then
      git config user.email "${GIT_AUTHOR_EMAIL}"
      git config user.name  "${GIT_AUTHOR_NAME}"
    fi
    TEMP="$(mktemp -d)"
    trap "rm -rf -- $TEMP" EXIT
    git clone --depth=1 --no-tags --branch=master https://gitlabe1.ext.net.nokia.com/k3/k3.git $TEMP
    cd $TEMP
    git checkout -b ntt-update-$CI_COMMIT_SHORT_SHA
    git submodule update --init lib/ntt
    (cd lib/ntt; git fetch origin; git checkout $CI_COMMIT_SHA)
    git add lib/ntt
    git commit -am "Update ntt"
    git push
    K3_PROJECT_ID=5154
    curl -X POST "${CI_API_V4_URL}/projects/$K3_PROJECT_ID/merge_requests" \
        --header "PRIVATE-TOKEN:${GITLAB_TOKEN}" \
        --header "Content-Type: application/json" \
        --data @- <<EOB
    {
        "id": ${K3_PROJECT_ID},
        "source_branch": "ntt-update-${CI_COMMIT_SHORT_SHA}",
        "target_branch": "master",
        "remove_source_branch": true,
        "title": "Update ntt (${CI_COMMIT_SHORT_SHA})",
        "assignee_id":"${GITLAB_USER_ID}"
        "merge_when_pipeline_succeeds": true,
    }
    EOB
