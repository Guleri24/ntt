workflow:
  rules:
    - if: $CI_COMMIT_TITLE =~ /-draft$/
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

.go-cache:
  variables:
    GOPATH: $CI_PROJECT_DIR/.go
  before_script:
    - mkdir -p .go
  cache:
    paths:
      - .go/pkg/mod/

stages:
  - test
  - quality

golang:1.16:
  stage: test
  image: golang:1.16
  script:
    - go test ./...

golang:latest:
  stage: test
  image: golang:latest
  extends: .go-cache
  script:
    - go test ./...

coverage:
  stage: quality
  image: golang:latest
  extends: .go-cache
  needs: []
  script:
    - go install github.com/boumenot/gocover-cobertura@latest
    - go test -coverprofile=coverage.out -covermode count ./...
    - $GOPATH/bin/gocover-cobertura <coverage.out >report-coverage.xml
  coverage: '/coverage: \d+.\d+% of statements/'
  # Not supported, yet. Wait for GitLab 14.10
  # artifacts:
  #   reports:
  #     coverage_report:
  #       coverage_format: cobertura
  #       path: report-coverage.xml

lint:
  stage: quality
  image: registry.gitlab.com/gitlab-org/gitlab-build-images:golangci-lint-alpine
  needs: []
  script:
    - golangci-lint run
  artifacts:
    reports:
      codequality: report-lint.json
    paths:
      - report-lint.json
