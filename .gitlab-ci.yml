workflow:
  rules:
    - if: $CI_COMMIT_TITLE =~ /-draft$/
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

.go-cache:
  variables:
    GOPATH: $CI_PROJECT_DIR/.go
  before_script:
    - mkdir -p .go
  cache:
    paths:
      - .go/pkg/mod/

stages:
  - build
  - test
  - integration

build:
  stage: build
  image: golang:latest
  script:
    - go build
    - echo "BUILD_JOB_ID=${CI_JOB_ID}" >> build.env
  artifacts:
    reports:
      dotenv: build.env
    paths: [ntt]

golang:1.16:
  stage: test
  image: golang:1.16
  script:
    - go test ./...

golang:latest:
  stage: test
  image: golang:latest
  extends: .go-cache
  script:
    - go install gotest.tools/gotestsum@latest
    - $GOPATH/bin/gotestsum --junitfile report-junit.xml --format testname -- -race ./...
  artifacts:
    reports:
      junit: report-junit.xml

coverage:
  stage: test
  image: golang:latest
  extends: .go-cache
  needs: []
  script:
    - go install github.com/boumenot/gocover-cobertura@latest
    - go test -coverprofile=coverage.out -covermode count ./...
    - $GOPATH/bin/gocover-cobertura <coverage.out >report-coverage.xml
  coverage: '/coverage: \d+.\d+% of statements/'
  artifacts:
    reports:
      cobertura: report-coverage.xml

lint:
  stage: test
  image: registry.gitlab.com/gitlab-org/gitlab-build-images:golangci-lint-alpine
  needs: []
  script:
    - golangci-lint run
  artifacts:
    reports:
      codequality: report-lint.json
    paths:
      - report-lint.json

trigger-k3:
  stage: integration
  variables:
    K3CI_NTT_BUILD_JOB_ID: ${BUILD_JOB_ID}
  needs: [build]
  trigger:
    project: k3/k3
    strategy: depend
